"""c simplified organization storage

Revision ID: 0bdab1639386
Revises: b99b880c3395
Create Date: 2025-08-08 02:34:25.642603

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2.types
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "0bdab1639386"
down_revision: Union[str, Sequence[str], None] = "b99b880c3395"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "organizations", sa.Column("building_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "organizations", sa.Column("activity_tag", sa.String(length=128), nullable=True)
    )
    op.create_foreign_key(None, "organizations", "buildings", ["building_id"], ["id"])
    op.create_foreign_key(
        None, "organizations", "activities", ["activity_tag"], ["tag"]
    )
    op.drop_column("organizations", "activity_tree")
    op.drop_column("organizations", "activity_bitmap")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "organizations",
        sa.Column(
            "activity_bitmap",
            postgresql.BIT(length=1024),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "organizations",
        sa.Column(
            "activity_tree",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(None, "organizations", type_="foreignkey")
    op.drop_constraint(None, "organizations", type_="foreignkey")
    op.drop_column("organizations", "activity_tag")
    op.drop_column("organizations", "building_id")
    # ### end Alembic commands ###
