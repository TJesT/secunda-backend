"""+ tables: activities, buildings, organizations

Revision ID: 5d9aca844a32
Revises:
Create Date: 2025-08-07 07:03:17.169971

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2.types
from sqlalchemy.dialects import postgresql
from sqlalchemy.ext.asyncio import AsyncConnection

from src.db.base import async_engine

# revision identifiers, used by Alembic.
revision: str = "5d9aca844a32"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with async_engine.sync_engine.connect() as con:
        con: AsyncConnection
        con.execute(sa.text("CREATE EXTENSION IF NOT EXISTS postgis"))
        con.commit()

    op.create_table(
        "activities",
        sa.Column("tag", sa.String(length=128), nullable=False),
        sa.Column("bitmap", postgresql.BIT(length=1024), nullable=False),
        sa.PrimaryKeyConstraint("tag"),
        sa.UniqueConstraint("tag"),
    )
    op.create_table(
        "buildings",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("address", sa.String(length=1024), nullable=True),
        sa.Column(
            "geo_point",
            geoalchemy2.types.Geometry(
                geometry_type="POINT",
                dimension=2,
                from_text="ST_GeomFromEWKT",
                name="geometry",
            ),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "organizations",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=128), nullable=True),
        sa.Column("phone_numbers", sa.ARRAY(sa.String(length=16)), nullable=False),
        sa.Column("activity_bitmap", postgresql.BIT(length=1024), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("organizations")
    op.drop_index(
        "idx_buildings_geo_point", table_name="buildings", postgresql_using="gist"
    )
    op.drop_table("buildings")
    op.drop_table("activities")
    with async_engine.sync_engine.connect() as con:
        con: AsyncConnection
        con.execute(sa.text("DROP EXTENSION IF EXISTS postgis"))
        con.commit()
    # ### end Alembic commands ###
